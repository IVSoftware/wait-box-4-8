<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAk
        IOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0AC
        gg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg
        6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKC
        DgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDo
        AJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIO
        AAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgA
        kICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4A
        CQg6ACQg6ACQgKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQ
        gKADQAKCDgAJCDoAJCDoAJCAoANAAoIOAAkIOgAkIOgAkICgA0ACgg4ACQg6ACQg6ACQgKADQAKCDgAJ
        CDoAJCDoAJCAoANAAoIOAAkIOgAk8H/Y6zy1g9aoxgAAAABJRU5ErkJggg==
</value>
  </data>
</root>